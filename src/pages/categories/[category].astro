---
import {
  type InferGetStaticPropsType,
  type InferGetStaticParamsType,
} from "astro";

// main layout
import BaseLayout from "@layouts/BaseLayout.astro";

// components
import PostCardSmall from "@components/PostCard/PostCardSmall.astro";
import PostCardLarge from "@components/PostCard/PostCardLarge.astro";
import PostCardFull from "@components/PostCard/PostCardFull.astro";
import CategoryCloud from "@components/CategoryCloud/CategoryCloud.astro";

// utils
import { getAllPosts, countItems, sortByValue } from "@js/blogUtils";
import { slugify, humanize } from "@js/textUtils";

// generate pagination for tag pages if there are a bunch of posts for a single tag
export async function getStaticPaths() {
  const posts = await getAllPosts();
  const allCategories = posts.map((post) => post.data.categories).flat();
  const countedCategories = countItems(allCategories);
  const processedCategories = sortByValue(countedCategories);

  return processedCategories.map(([category, count]) => ({
    params: { category: category },
  }));
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
type Params = InferGetStaticParamsType<typeof getStaticPaths>;

// const filteredPosts = Astro.props as Props;
const { category } = Astro.params as Params;

const posts = await getAllPosts();
const filteredPosts = posts.filter((post) => {
  // make sure to slugify them for comparison
  const slugifiedCategory = post.data.categories.map((category) =>
    slugify(category),
  );

  return slugifiedCategory.includes(category);
});
---

<BaseLayout
  title={`Our Blog Posts on ${humanize(category)}`}
  description="Learn from our blog posts about web development, design, and more."
>
  <section class="container pt-36 md:pt-44">
    <h1 class="h1 text-center">
      Helpful tips on <span class="text-primary-600"
        >{humanize(category).toLowerCase()}</span
      >
    </h1>
    <div class="mt-6 flex justify-center">
      <CategoryCloud />
    </div>

    <div class="mt-20 grid gap-4 gap-y-12 md:mt-28">
      {
        filteredPosts.map((post) => (
          <PostCardFull post={post} showDescription={true} />
        ))
      }
    </div>
  </section>
</BaseLayout>
